source \~/.vim/general.vim
source \~/.vim/key-mapping.vim
source \~/.vim/plugins.vim

" Appearance {{{
  colorscheme CandyPaper
" }}}

" YouCompleteMe {{{
let g:ycm_confirm_extra_conf = 1
"let g:ycm_extra_conf_globlist = ['~/dev/*','!~/*']
" }}}

" Pymode {{{
let g:pymode_rope_completion = 0 "disable rope completion
let g:pymode_lint = 0
autocmd CursorMovedI * if pumvisible() == 0|pclose|endif
autocmd InsertLeave * if pumvisible() == 0|pclose|endif
" }}}

" Airline {{{
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
set laststatus=2
set t_Co=256
" }}}

" NERDTree {{{
let g:NERDTreeMapChangeRoot =  "`"

nnoremap <silent> <F11> :NERDTreeToggle<CR>
let NERDTreeMinimalUI=1
let NERDTreeDirArrows=0
let NERDTreeShowHidden=1
let NERDTreeQuitOnOpen=1
let NERDTreeIgnore=['\.pyc$', '\~$']
let NERDTreeWinSize=25

function! NERDTreeQuit()
  redir => buffersoutput
  silent buffers
  redir END
  "                     1BufNo  2Mods.     3File           4LineNo
  let pattern = '^\s*\(\d\+\)\(.....\) "\(.*\)"\s\+line \(\d\+\)$'
  let windowfound = 0

  for bline in split(buffersoutput, "\n")
    let m = matchlist(bline, pattern)

    if (len(m) > 0)
      if (m[2] =~ '..a..')
        let windowfound = 1
      endif
    endif
  endfor

  if (!windowfound)
    quitall
  endif
endfunction
autocmd WinEnter * call NERDTreeQuit()
" }}}

" IndentLine {{{
"let g:indentLine_char='|'
" }}}

" Emmet (Zen coding) {{{
let g:user_emmet_mode='i'
let g:user_emmet_leader_key='<C-Y>'
let g:user_emmet_settings={
      \ 'xml': {
      \   'extends': 'html',
      \},
      \ 'haml': {
      \   'extends': 'html',
      \},
      \ 'jinja': {
      \   'extends': 'html',
      \},
      \ 'hbs': {
      \   'extends': 'html',
      \},
      \ 'html.handlebars': {
      \   'extends': 'html',
      \},
    \}
" }}}

